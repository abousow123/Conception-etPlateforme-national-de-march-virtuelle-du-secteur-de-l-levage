package org.sid.entities;
// Generated 5 mars 2019 12:53:42 by Hibernate Tools 3.6.0.Final

import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur")
public class Utilisateur implements java.io.Serializable {

	private String id = UUID.randomUUID().toString() ;

	private String nom;
	private String prenom;
	private String adresse;
	private String email;
	private String telephone;
	private String login;
	private String password;
	private String profil;

	//relation
	private Role role;
	private Departement departement;

	private Set<Membre> membres = new HashSet(0);


	public Utilisateur() {
	}


	@Id
	@Column(name = "id", unique = true, nullable = false, length = 254)
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "nom", length = 254)
	public String getNom() {
		return nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenom", length = 254)
	public String getPrenom() {
		return prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "adresse", length = 254)
	public String getAdresse() {
		return adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Column(name = "email", length = 254)
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "telephone", length = 254)
	public String getTelephone() {
		return telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "login", length = 254)
	public String getLogin() {
		return login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", length = 254)
	@JsonProperty(access= JsonProperty.Access.WRITE_ONLY)
	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "profil", length = 254)
	public String getProfil() {
		return profil;
	}

	public void setProfil(String profil) {
		this.profil = profil;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	public Role getRole() {
		return role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	public Departement getDepartement() {
		return departement;
	}

	public void setDepartement(Departement departement) {
		this.departement = departement;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "utilisateur")
	@JsonIgnoreProperties("utilisateur")
	public Set<Membre> getMembres() {
		return membres;
	}

	public void setMembres(Set<Membre> membres) {
		this.membres = membres;
	}

	/*@Id

	@Column(name = "id", unique = true, nullable = false, length = 254)
	public String getNumuser() {
		return this.id;
	}

	public void setNumuser(String numuser) {
		this.id = numuser;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idrole", nullable = false)
	@JsonIgnoreProperties("utilisateurs")
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "nom", length = 254)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenom", length = 254)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "adresse", length = 254)
	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Column(name = "email", length = 254,unique=true)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "telephone", length = 254)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "login", length = 254)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", length = 254)
	@JsonProperty(access= JsonProperty.Access.WRITE_ONLY)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "profil", length = 254)
	public String getProfil() {
		return this.profil;
	}

	public void setProfil(String profil) {
		this.profil = profil;
	}


	@OneToMany(fetch = FetchType.EAGER, mappedBy = "eleveur")
	@JsonIgnoreProperties("eleveur")
	public Set<Membre> getMembres() {
		return this.membres;
	}

	public void setMembres(Set<Membre> membres) {
		this.membres = membres;
	}*/

	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "eleveur")
	@JsonIgnoreProperties("eleveur")
	public Set<Commandeeleveur> getCommandeeleveurs() {
		return this.commandeeleveurs;
	}

	public void setCommandeeleveurs(Set<Commandeeleveur> commandeeleveurs) {
		this.commandeeleveurs = commandeeleveurs;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "eleveur")
	@JsonIgnoreProperties("eleveur")
	public Set<Animal> getAnimals() {
		return this.animals;
	}

	public void setAnimals(Set<Animal> animals) {
		this.animals = animals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eleveur")
	@JsonIgnoreProperties("eleveur")
	public Set<Annoncegouvernemental> getAnnoncegouvernementals() {
		return this.annoncegouvernementals;
	}

	public void setAnnoncegouvernementals(Set<Annoncegouvernemental> annoncegouvernementals) {
		this.annoncegouvernementals = annoncegouvernementals;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "veterinaire")
	@JsonIgnoreProperties("veterinaire")
	//@JsonIgnore
	public Set<Produitveterinaire> getProduitveterinaires() {
		return this.produitveterinaires;
	}

	public void setProduitveterinaires(Set<Produitveterinaire> produitveterinaires) {
		this.produitveterinaires = produitveterinaires;
	}


	@OneToMany(fetch = FetchType.EAGER, mappedBy = "distributeur")
	@JsonIgnoreProperties("distributeur")
	public Set<Produitelevage> getProduitelevages() {
		return this.produitelevages;
	}

	public void setProduitelevages(Set<Produitelevage> produitelevages) {
		this.produitelevages = produitelevages;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "client")
	@JsonIgnoreProperties("client")
	public Set<Commandeclient> getCommandeclients() {
		return this.commandeclients;
	}

	public void setCommandeclients(Set<Commandeclient> commandeclients) {
		this.commandeclients = commandeclients;
	}*/

	
}
